{"version":3,"sources":["index.js"],"names":["API","makeLetters","letters","map","letter","join","makeTerms","terms","makeHeader","term","key","position","title","toLowerCase","tags","tag","children","makeNav","inView","elem","boundingClientRect","getBoundingClientRect","top","bottom","window","innerHeight","document","documentElement","clientHeight","scrollNav","desktopQuery","matchMedia","matches","querySelector","scrollTop","offsetTop","scrollLeft","offsetLeft","setupActiveLetter","elems","classList","remove","navItem","innerText","add","setupStickyLetters","mainEl","navEl","addEventListener","navTop","style","setupLetterClicks","querySelectorAll","forEach","anchor","lastTargetElem","el","previousKey","parseInt","getAttribute","filter","groupedElems","previousElems","request","successFn","failureFn","fetch","then","r","json","data","call","catch","error","successfulRender","navTemplate","letterTemplate","termTemplate","innerHTML","failureRender"],"mappings":";;;AA6IA,aAAA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,mDAAA,SAAA,EAAA,GAAA,GAAA,OAAA,YAAA,OAAA,IAAA,uBAAA,OAAA,UAAA,SAAA,KAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,CAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,EAAA,QAAA,EAAA,EAAA,OAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,GA7IA,QAAA,eAEA,IAAMA,EAAM,mDAENC,EAAc,SAAAC,GAGZA,MAAAA,wEAAAA,OAAAA,EAAQC,IAAI,SAAAC,GAAwBA,MAAAA,cAAAA,OAAAA,EAAiCA,4BAAAA,OAAAA,EAAkBA,aAAAA,OAAAA,EAArE,eAAwFC,KAAK,IAH5F,0BAOrBC,EAAY,SAAAC,GAEZC,MAAAA,wCAAAA,OAAAA,IACAD,UAAAA,OAAAA,EACEA,gCAAAA,OAAAA,EAAMJ,IAAI,SAACM,EAAMC,GACJD,MAAAA,4BAAAA,OAAkB,OAAlBA,EAAKE,SAA2BF,OAAAA,OAAAA,EAAKG,MAAM,GAAGC,cAA0B,YAAA,KACjEH,8CAAAA,OAAAA,EACZD,0CAAAA,OAAAA,EAAKG,MAEHH,gEAAAA,OAAAA,EAAKK,KAAKX,IAAI,SAAAY,GAAcA,MAAAA,OAAAA,OAAAA,EAAX,WAAuBV,KAAK,IAGtBI,qFAAAA,OAAAA,EAAKO,SAR5B,+CAUJX,KAAK,IACN,eAAA,6EAfU,gBAkBjBY,EAAU,WAAA,MAAA,wNAMVT,EAAa,WAAA,MAAA,8VAQnB,SAASU,EAAQC,GACTC,IAAAA,EAAqBD,EAAKE,wBAC5BD,OAAAA,EAAmBE,KAAO,GAC5BF,EAAmBG,SAAWC,OAAOC,aAAeC,SAASC,gBAAgBC,cAOjF,SAASC,EAAWV,GACZW,IAAAA,EAAeN,OAAOO,WAAW,uBAEnCb,EAAOC,IAASW,EAAaE,QAC/BN,SAASO,cAAc,YAAYC,UAAYf,EAAKgB,UAEpDT,SAASO,cAAc,YAAYG,WAAajB,EAAKkB,WAIzD,SAASC,EAAmBC,GAC1BA,EAAMpC,IAAI,SAASgB,GACdD,GAAAA,EAAOC,GAAO,CAC0B,OAAtCO,SAASO,cAAc,YACxBP,SAASO,cAAc,WAAWO,UAAUC,OAAO,UAE/CC,IAAAA,EAAUhB,SAASO,cAAkBd,IAAAA,OAAAA,EAAKwB,UAAU,KAC1DD,EAAQF,UAAUI,IAAI,UACtBf,EAAUa,MAKhB,SAASG,EAAoBN,GACrBO,IAAAA,EAASpB,SAASO,cAAc,aAChCc,EAAQrB,SAASO,cAAc,YAC/BH,EAAeN,OAAOO,WAAW,sBAEvCL,SAASsB,iBAAiB,SAAU,WAC/BlB,GAAAA,EAAaE,QAAS,CACjBiB,IAAAA,EAASH,EAAOzB,wBAAwBC,IAAM,GAAKwB,EAAOzB,wBAAwBC,IAAM,GAC9FyB,EAAMG,MAAM5B,IAAM2B,OAElBF,EAAMG,MAAM5B,IAAM,EAEpBgB,EAAkBC,KAItB,SAASY,IACazB,EAAAA,SAAS0B,iBAAiB,eACtCC,QAAQ,SAAAC,GACdA,EAAON,iBAAiB,QAAS,WACU,OAAtCtB,SAASO,cAAc,YACxBP,SAASO,cAAc,WAAWO,UAAUC,OAAO,UAErDa,EAAOd,UAAUI,IAAI,cAK3B,SAASW,EAAgBhB,GAChBA,OAAAA,EAAMpC,IAAI,SAAAqD,GACTC,IAAAA,EAAcC,SAASF,EAAGG,aAAa,YAAa,IAAM,EAC1DxC,EAAOO,SAASO,cAA4BwB,cAAAA,OAAAA,EAAlD,OACOtC,OAAAA,GAAc,OACpByC,OAAO,SAAAJ,GAAMA,OAAAA,IAGlB,SAASK,IACDtB,IAAAA,EAAYb,EAAAA,SAAS0B,iBAAiB,uBACtCU,EAAgBP,EAAehB,GAC1BA,MAAAA,GAAAA,OAAAA,EAAAA,GAAUuB,EAAAA,IAGvB,SAASC,EAASC,EAAWC,GACpBC,OAAAA,MAAMlE,GACVmE,KAAK,SAAAC,GAAKA,OAAAA,EAAEC,SACZF,KAAK,SAAAG,GAAQN,OAAAA,EAAUO,KAAK,KAAMD,KAClCE,MAAM,SAAAC,GAASR,OAAAA,EAAUM,KAAK,KAAME,KAIzC,SAASC,EAAoC,GAAjBxE,IAAAA,EAAAA,EAAAA,QAASK,EAAAA,EAAAA,MAC7BoE,EAAc1D,IACd2D,EAAiB3E,EAAYC,GAC7B2E,EAAevE,EAAUC,GAE/BmB,SAASO,cAAc,QAAQ6C,UAAYH,EAAcC,EAAiBC,EAG5E,SAASE,IACDJ,IAAAA,EAAc1D,IACd4D,EAAevE,IAErBoB,SAASO,cAAc,QAAQ6C,UAAYH,EAAcE,EAG3Dd,EAAQW,EAAkBK,GACvBZ,KAAK,WACE5B,IAAAA,EAAQsB,IACdvB,EAAkBC,GAClBM,EAAmBN,GACnBY","file":"src.4d1512e7.js","sourceRoot":"../src","sourcesContent":["import './index.css';\n\nconst API = 'https://pd-spellbook-api.richardrcargill.now.sh/';\n\nconst makeLetters = letters => \n  `<nav id=\"letters\" class=\"letters\">\n    <ul class=\"no-style\">\n      ${letters.map(letter => `<li><a id=\"${letter}\" class=\"letter\" href=\"#${letter}_target\">${letter}</a></li>`).join('')}\n    </ul>\n  </nav>`;\n\nconst makeTerms = terms =>\n  `<main id=\"terms\" class=\"terms\">\n    ${makeHeader()}\n    ${terms ? `<ul class=\"no-style\">\n      ${terms.map((term, key) => `<li>\n          <article ${term.position !== null ? `id=\"${term.title[0].toLowerCase()}_target\"` : null} class=\"term\">\n            <h2 data-key=\"${key}\" class=\"term__title\">\n              ${term.title}\n              <ul class=\"no-style tags\">\n                ${term.tags.map(tag => `<li>${tag}</li>`).join('')}\n              </ul>\n            </h2>\n            <div class=\"term__content\">${term.children}</div>\n          </article>\n      </li>`).join('')}\n    </ul>` : '<p style=\"color:red\" class=\"term__content\">There was a problem loading</p>'}\n  </main>`;\n\nconst makeNav = () => \n  `<nav class=\"nav\">\n    <a href=\"mailto:mailto:annalisavalente@pm.me\" class=\"nav__item button button--ghost\">Contact me</a>\n    <a href=\"https://annalisa.space/about/\" class=\"nav__item button\">About</a>\n  </nav>`;\n\nconst makeHeader = () => \n  `<header class=\"header\">\n    <h1 class=\"header__title\">Product designer spellbook</h1>\n    <div class=\"term__content\">\n      <p>Terms that I use everyday as a Product designer. This glossary is for technical and non-technical people. If you think something is missing or you want to contribute feel free to ping me!</p>\n    </div>\n  </header>`;\n\nfunction inView (elem) {\n  const boundingClientRect = elem.getBoundingClientRect();\n  if (boundingClientRect.top >= 0 &&\n    boundingClientRect.bottom <= (window.innerHeight || document.documentElement.clientHeight)) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nfunction scrollNav (elem) {\n  const desktopQuery = window.matchMedia('(min-width: 600px)');\n\n  if(!inView(elem) && desktopQuery.matches) {\n    document.querySelector('#letters').scrollTop = elem.offsetTop;\n  } else {\n    document.querySelector('#letters').scrollLeft = elem.offsetLeft;\n  }\n}\n\nfunction setupActiveLetter (elems) {\n  elems.map(function(elem) {\n    if(inView(elem)) {\n      if(document.querySelector('.active') !== null) {\n        document.querySelector('.active').classList.remove('active');\n      }\n      const navItem = document.querySelector(`#${elem.innerText[0]}`);\n      navItem.classList.add('active');\n      scrollNav(navItem);\n    }\n  });\n}\n\nfunction setupStickyLetters (elems) {\n  const mainEl = document.querySelector('#terms ul');\n  const navEl = document.querySelector('#letters');\n  const desktopQuery = window.matchMedia('(min-width: 600px)');\n\n  document.addEventListener('scroll', function() {\n    if(desktopQuery.matches) {\n      const navTop = mainEl.getBoundingClientRect().top > 18 ? mainEl.getBoundingClientRect().top : 18;\n      navEl.style.top = navTop;\n    } else {\n      navEl.style.top = 0;\n    }\n    setupActiveLetter(elems);\n  });\n}\n\nfunction setupLetterClicks () {\n  const anchors = [...document.querySelectorAll('#letters a')];\n  anchors.forEach(anchor => {\n    anchor.addEventListener('click', () => {\n      if(document.querySelector('.active') !== null) {\n        document.querySelector('.active').classList.remove('active');\n      }\n      anchor.classList.add('active')\n    });\n  });\n}\n\nfunction lastTargetElem (elems) {\n  return elems.map(el => {\n    const previousKey = parseInt(el.getAttribute('data-key'), 10) - 1;\n    const elem = document.querySelector(`[data-key=\"${previousKey}\"]`);\n    return elem ? elem : null;\n  }).filter(el => el);\n}\n\nfunction groupedElems () {\n  const elems = [...document.querySelectorAll('[id$=\"_target\"] h2')];\n  const previousElems = lastTargetElem(elems);\n  return [...elems, ...previousElems];\n}\n\nfunction request (successFn, failureFn) {\n  return fetch(API)\n    .then(r => r.json())\n    .then(data => successFn.call(null, data))\n    .catch(error => failureFn.call(null, error));\n}\n\n// need to move to a virtual dom or other rendering solution\nfunction successfulRender ({letters, terms}) {\n  const navTemplate = makeNav();\n  const letterTemplate = makeLetters(letters);\n  const termTemplate = makeTerms(terms);\n\n  document.querySelector('#app').innerHTML = navTemplate + letterTemplate + termTemplate;\n}\n\nfunction failureRender () {\n  const navTemplate = makeNav();\n  const termTemplate = makeTerms();\n\n  document.querySelector('#app').innerHTML = navTemplate + termTemplate;\n}\n\nrequest(successfulRender, failureRender)\n  .then(() => {\n    const elems = groupedElems();\n    setupActiveLetter(elems);\n    setupStickyLetters(elems);\n    setupLetterClicks();\n  })\n"]}